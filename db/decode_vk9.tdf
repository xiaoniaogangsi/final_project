--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_DECODES=29 LPM_WIDTH=5 data eq
--VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:24:SJ cbx_lpm_add_sub 2018:09:12:13:04:24:SJ cbx_lpm_compare 2018:09:12:13:04:24:SJ cbx_lpm_decode 2018:09:12:13:04:24:SJ cbx_mgl 2018:09:12:13:10:36:SJ cbx_nadder 2018:09:12:13:04:24:SJ cbx_stratix 2018:09:12:13:04:24:SJ cbx_stratixii 2018:09:12:13:04:24:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_vk9
( 
	data[4..0]	:	input;
	eq[28..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[28..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode531w[2..0]	: WIRE;
	w_anode545w[3..0]	: WIRE;
	w_anode562w[3..0]	: WIRE;
	w_anode572w[3..0]	: WIRE;
	w_anode582w[3..0]	: WIRE;
	w_anode592w[3..0]	: WIRE;
	w_anode602w[3..0]	: WIRE;
	w_anode612w[3..0]	: WIRE;
	w_anode622w[3..0]	: WIRE;
	w_anode634w[2..0]	: WIRE;
	w_anode644w[3..0]	: WIRE;
	w_anode655w[3..0]	: WIRE;
	w_anode665w[3..0]	: WIRE;
	w_anode675w[3..0]	: WIRE;
	w_anode685w[3..0]	: WIRE;
	w_anode695w[3..0]	: WIRE;
	w_anode705w[3..0]	: WIRE;
	w_anode715w[3..0]	: WIRE;
	w_anode726w[2..0]	: WIRE;
	w_anode736w[3..0]	: WIRE;
	w_anode747w[3..0]	: WIRE;
	w_anode757w[3..0]	: WIRE;
	w_anode767w[3..0]	: WIRE;
	w_anode777w[3..0]	: WIRE;
	w_anode787w[3..0]	: WIRE;
	w_anode797w[3..0]	: WIRE;
	w_anode807w[3..0]	: WIRE;
	w_anode818w[2..0]	: WIRE;
	w_anode828w[3..0]	: WIRE;
	w_anode839w[3..0]	: WIRE;
	w_anode849w[3..0]	: WIRE;
	w_anode859w[3..0]	: WIRE;
	w_anode869w[3..0]	: WIRE;
	w_anode879w[3..0]	: WIRE;
	w_anode889w[3..0]	: WIRE;
	w_anode899w[3..0]	: WIRE;
	w_data529w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[28..0] = eq_wire[28..0];
	eq_wire[] = ( ( w_anode899w[3..3], w_anode889w[3..3], w_anode879w[3..3], w_anode869w[3..3], w_anode859w[3..3], w_anode849w[3..3], w_anode839w[3..3], w_anode828w[3..3]), ( w_anode807w[3..3], w_anode797w[3..3], w_anode787w[3..3], w_anode777w[3..3], w_anode767w[3..3], w_anode757w[3..3], w_anode747w[3..3], w_anode736w[3..3]), ( w_anode715w[3..3], w_anode705w[3..3], w_anode695w[3..3], w_anode685w[3..3], w_anode675w[3..3], w_anode665w[3..3], w_anode655w[3..3], w_anode644w[3..3]), ( w_anode622w[3..3], w_anode612w[3..3], w_anode602w[3..3], w_anode592w[3..3], w_anode582w[3..3], w_anode572w[3..3], w_anode562w[3..3], w_anode545w[3..3]));
	w_anode531w[] = ( (w_anode531w[1..1] & (! data_wire[4..4])), (w_anode531w[0..0] & (! data_wire[3..3])), B"1");
	w_anode545w[] = ( (w_anode545w[2..2] & (! w_data529w[2..2])), (w_anode545w[1..1] & (! w_data529w[1..1])), (w_anode545w[0..0] & (! w_data529w[0..0])), w_anode531w[2..2]);
	w_anode562w[] = ( (w_anode562w[2..2] & (! w_data529w[2..2])), (w_anode562w[1..1] & (! w_data529w[1..1])), (w_anode562w[0..0] & w_data529w[0..0]), w_anode531w[2..2]);
	w_anode572w[] = ( (w_anode572w[2..2] & (! w_data529w[2..2])), (w_anode572w[1..1] & w_data529w[1..1]), (w_anode572w[0..0] & (! w_data529w[0..0])), w_anode531w[2..2]);
	w_anode582w[] = ( (w_anode582w[2..2] & (! w_data529w[2..2])), (w_anode582w[1..1] & w_data529w[1..1]), (w_anode582w[0..0] & w_data529w[0..0]), w_anode531w[2..2]);
	w_anode592w[] = ( (w_anode592w[2..2] & w_data529w[2..2]), (w_anode592w[1..1] & (! w_data529w[1..1])), (w_anode592w[0..0] & (! w_data529w[0..0])), w_anode531w[2..2]);
	w_anode602w[] = ( (w_anode602w[2..2] & w_data529w[2..2]), (w_anode602w[1..1] & (! w_data529w[1..1])), (w_anode602w[0..0] & w_data529w[0..0]), w_anode531w[2..2]);
	w_anode612w[] = ( (w_anode612w[2..2] & w_data529w[2..2]), (w_anode612w[1..1] & w_data529w[1..1]), (w_anode612w[0..0] & (! w_data529w[0..0])), w_anode531w[2..2]);
	w_anode622w[] = ( (w_anode622w[2..2] & w_data529w[2..2]), (w_anode622w[1..1] & w_data529w[1..1]), (w_anode622w[0..0] & w_data529w[0..0]), w_anode531w[2..2]);
	w_anode634w[] = ( (w_anode634w[1..1] & (! data_wire[4..4])), (w_anode634w[0..0] & data_wire[3..3]), B"1");
	w_anode644w[] = ( (w_anode644w[2..2] & (! w_data529w[2..2])), (w_anode644w[1..1] & (! w_data529w[1..1])), (w_anode644w[0..0] & (! w_data529w[0..0])), w_anode634w[2..2]);
	w_anode655w[] = ( (w_anode655w[2..2] & (! w_data529w[2..2])), (w_anode655w[1..1] & (! w_data529w[1..1])), (w_anode655w[0..0] & w_data529w[0..0]), w_anode634w[2..2]);
	w_anode665w[] = ( (w_anode665w[2..2] & (! w_data529w[2..2])), (w_anode665w[1..1] & w_data529w[1..1]), (w_anode665w[0..0] & (! w_data529w[0..0])), w_anode634w[2..2]);
	w_anode675w[] = ( (w_anode675w[2..2] & (! w_data529w[2..2])), (w_anode675w[1..1] & w_data529w[1..1]), (w_anode675w[0..0] & w_data529w[0..0]), w_anode634w[2..2]);
	w_anode685w[] = ( (w_anode685w[2..2] & w_data529w[2..2]), (w_anode685w[1..1] & (! w_data529w[1..1])), (w_anode685w[0..0] & (! w_data529w[0..0])), w_anode634w[2..2]);
	w_anode695w[] = ( (w_anode695w[2..2] & w_data529w[2..2]), (w_anode695w[1..1] & (! w_data529w[1..1])), (w_anode695w[0..0] & w_data529w[0..0]), w_anode634w[2..2]);
	w_anode705w[] = ( (w_anode705w[2..2] & w_data529w[2..2]), (w_anode705w[1..1] & w_data529w[1..1]), (w_anode705w[0..0] & (! w_data529w[0..0])), w_anode634w[2..2]);
	w_anode715w[] = ( (w_anode715w[2..2] & w_data529w[2..2]), (w_anode715w[1..1] & w_data529w[1..1]), (w_anode715w[0..0] & w_data529w[0..0]), w_anode634w[2..2]);
	w_anode726w[] = ( (w_anode726w[1..1] & data_wire[4..4]), (w_anode726w[0..0] & (! data_wire[3..3])), B"1");
	w_anode736w[] = ( (w_anode736w[2..2] & (! w_data529w[2..2])), (w_anode736w[1..1] & (! w_data529w[1..1])), (w_anode736w[0..0] & (! w_data529w[0..0])), w_anode726w[2..2]);
	w_anode747w[] = ( (w_anode747w[2..2] & (! w_data529w[2..2])), (w_anode747w[1..1] & (! w_data529w[1..1])), (w_anode747w[0..0] & w_data529w[0..0]), w_anode726w[2..2]);
	w_anode757w[] = ( (w_anode757w[2..2] & (! w_data529w[2..2])), (w_anode757w[1..1] & w_data529w[1..1]), (w_anode757w[0..0] & (! w_data529w[0..0])), w_anode726w[2..2]);
	w_anode767w[] = ( (w_anode767w[2..2] & (! w_data529w[2..2])), (w_anode767w[1..1] & w_data529w[1..1]), (w_anode767w[0..0] & w_data529w[0..0]), w_anode726w[2..2]);
	w_anode777w[] = ( (w_anode777w[2..2] & w_data529w[2..2]), (w_anode777w[1..1] & (! w_data529w[1..1])), (w_anode777w[0..0] & (! w_data529w[0..0])), w_anode726w[2..2]);
	w_anode787w[] = ( (w_anode787w[2..2] & w_data529w[2..2]), (w_anode787w[1..1] & (! w_data529w[1..1])), (w_anode787w[0..0] & w_data529w[0..0]), w_anode726w[2..2]);
	w_anode797w[] = ( (w_anode797w[2..2] & w_data529w[2..2]), (w_anode797w[1..1] & w_data529w[1..1]), (w_anode797w[0..0] & (! w_data529w[0..0])), w_anode726w[2..2]);
	w_anode807w[] = ( (w_anode807w[2..2] & w_data529w[2..2]), (w_anode807w[1..1] & w_data529w[1..1]), (w_anode807w[0..0] & w_data529w[0..0]), w_anode726w[2..2]);
	w_anode818w[] = ( (w_anode818w[1..1] & data_wire[4..4]), (w_anode818w[0..0] & data_wire[3..3]), B"1");
	w_anode828w[] = ( (w_anode828w[2..2] & (! w_data529w[2..2])), (w_anode828w[1..1] & (! w_data529w[1..1])), (w_anode828w[0..0] & (! w_data529w[0..0])), w_anode818w[2..2]);
	w_anode839w[] = ( (w_anode839w[2..2] & (! w_data529w[2..2])), (w_anode839w[1..1] & (! w_data529w[1..1])), (w_anode839w[0..0] & w_data529w[0..0]), w_anode818w[2..2]);
	w_anode849w[] = ( (w_anode849w[2..2] & (! w_data529w[2..2])), (w_anode849w[1..1] & w_data529w[1..1]), (w_anode849w[0..0] & (! w_data529w[0..0])), w_anode818w[2..2]);
	w_anode859w[] = ( (w_anode859w[2..2] & (! w_data529w[2..2])), (w_anode859w[1..1] & w_data529w[1..1]), (w_anode859w[0..0] & w_data529w[0..0]), w_anode818w[2..2]);
	w_anode869w[] = ( (w_anode869w[2..2] & w_data529w[2..2]), (w_anode869w[1..1] & (! w_data529w[1..1])), (w_anode869w[0..0] & (! w_data529w[0..0])), w_anode818w[2..2]);
	w_anode879w[] = ( (w_anode879w[2..2] & w_data529w[2..2]), (w_anode879w[1..1] & (! w_data529w[1..1])), (w_anode879w[0..0] & w_data529w[0..0]), w_anode818w[2..2]);
	w_anode889w[] = ( (w_anode889w[2..2] & w_data529w[2..2]), (w_anode889w[1..1] & w_data529w[1..1]), (w_anode889w[0..0] & (! w_data529w[0..0])), w_anode818w[2..2]);
	w_anode899w[] = ( (w_anode899w[2..2] & w_data529w[2..2]), (w_anode899w[1..1] & w_data529w[1..1]), (w_anode899w[0..0] & w_data529w[0..0]), w_anode818w[2..2]);
	w_data529w[2..0] = data_wire[2..0];
END;
--VALID FILE
